<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
  <parent>
      <groupId>org.terrameta</groupId>
      <artifactId>plasma</artifactId>
      <version>2.2.1</version>
  </parent>
  <groupId>org.terrameta</groupId>
  <artifactId>plasma-test-model</artifactId>
  <version>2.2.1</version>
  <packaging>jar</packaging>

  <name>Plasma Test Model</name>
	<description>The Plasma Test Model Module</description>
	<licenses>
		<license>
			<name>Plasma License</name>
			<url>https://github.com/plasma-framework/plasma/LICENSE</url>
			<distribution>repo</distribution>
		</license>
	</licenses>
	<scm>
		<url>https://github.com/plasma-framework/plasma</url>
		<connection></connection>
	</scm>
  <properties>
      <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

	<repositories>
	</repositories>
	<pluginRepositories>
	</pluginRepositories>

	<dependencies>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.9</version>
		</dependency>
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.1.1</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.terrameta</groupId>
			<artifactId>plasma-core</artifactId>
			<version>2.2.1</version>
		</dependency>
  	</dependencies>
	<build>
		<finalName>${project.artifactId}-${project.version}</finalName>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<id>add-source-compile</id>
						<phase>compile</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${basedir}/target/generated-sources/java</source>
							</sources>
						</configuration>
					</execution>
 				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<encoding>UTF-8</encoding>
				</configuration>
				<executions>
					<!-- NOTE: we need 2 executions in the compiler plugin because the annotation 
						discovery for your annotated Java requires COMPILED classes. The compiled 
						annotated classes are first used at generate-sources phase, then for several 
						later Maven phases. An alternative to this "trick" is to isolated your annotated 
						classes in a separate compiled Maven module, then perform the code generation 
						in a second module which depends on the first. -->
					<execution>
						<id>default-compile</id>
						<phase>generate-sources</phase>
						<configuration>
							<excludes>
								<exclude>**/generated-sources/*</exclude>
								<exclude>**/examples/quickstart/*</exclude>
							</excludes>
						</configuration>
					</execution>
					<execution>
						<id>compile-generated</id>
						<phase>compile</phase>
						<goals>
							<goal>compile</goal>
						</goals>
						<configuration>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>3.0.1</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>net.revelc.code</groupId>
				<artifactId>formatter-maven-plugin</artifactId>
				<version>0.5.2</version>
				<executions>
					<execution>
						<goals>
							<goal>format</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<configFile>${project.basedir}/formatter.xml</configFile>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.terrameta</groupId>
				<artifactId>plasma-maven-plugin</artifactId>
				<version>2.2.1</version>
				<dependencies>
					<dependency>
						<groupId>org.terrameta</groupId>
						<artifactId>plasma-core</artifactId>
						<version>2.2.1</version>
					</dependency>
					<dependency>
						<groupId>org.terrameta</groupId>
						<artifactId>plasma-jdbc</artifactId>
						<version>2.2.1</version>
					</dependency>
 				</dependencies>
				<executions>
					<execution>
						<id>sdo-create</id>
						<configuration>
							<action>create</action>
							<dialect>java</dialect>
							<additionalClasspathElements>
								<param>${basedir}/src/main/resources</param>
								<param>${basedir}/target/classes</param>
							</additionalClasspathElements>
							<outputDirectory>${basedir}/target/generated-sources/java</outputDirectory>
						</configuration>
						<goals>
							<goal>sdo</goal>
						</goals>
					</execution>
					<execution>
						<id>dsl-create</id>
						<configuration>
							<action>create</action>
							<dialect>java</dialect>
							<additionalClasspathElements>
								<param>${basedir}/src/main/resources</param>
								<param>${basedir}/target/classes</param>
							</additionalClasspathElements>
							<outputDirectory>${basedir}/target/generated-sources/java</outputDirectory>
						</configuration>
						<goals>
							<goal>dsl</goal>
						</goals>
					</execution>
					<execution>
						<id>ddl-create-mysql</id>
						<configuration>
							<action>create</action>
							<dialect>mysql</dialect>
							<additionalClasspathElements>
								<param>${basedir}/src/main/resources</param>
								<param>${basedir}/target/classes</param>
							</additionalClasspathElements>
							<outputDirectory>${basedir}/target/ddl</outputDirectory>
							<outputFile>mysql-create.sql</outputFile>
						</configuration>
						<goals>
							<goal>rdb</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<mainClass>examples.quickstart.ExampleRunner</mainClass>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.4</version>
				<executions>
					<execution>
						<id>assemble-zip</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<descriptors>
						<descriptor>maven-assembly-dist.xml</descriptor>
					</descriptors>
				</configuration>
			</plugin>
 
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.terrameta</groupId>
										<artifactId>
											plasma-maven-plugin
										</artifactId>
										<versionRange>
											[2.0.0,)
										</versionRange>
										<goals>
											<goal>sdo</goal>
											<goal>dsl</goal>
											<goal>rdb</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											net.revelc.code
										</groupId>
										<artifactId>
											formatter-maven-plugin
										</artifactId>
										<versionRange>
											[0.5.2,)
										</versionRange>
										<goals>
											<goal>format</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>