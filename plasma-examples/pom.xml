<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
      <groupId>org.terrameta</groupId>
      <artifactId>plasma</artifactId>
      <version>1.3.4</version>
  </parent>
  <groupId>org.terrameta</groupId>
  <artifactId>plasma-examples</artifactId>
  <version>1.3.4</version>
  <packaging>jar</packaging>

  <name>Plasma Examples</name>
  <description>In its initial releases, the PlasmaSDO™ implementation seeks to address the need for automation and code generation under SDO for standard enterprise Java web applications while focusing on critical operational considerations these applications face, such as optimistic and pessimistic concurrency control. The PlasmaSDO™ implementation is not bound to any integrated development environment (IDE) and provides support for standard Java™ based build tools. Note: Such operational considerations such as optimistic and pessimistic concurrency control are seen as a feature gap within various commercial and open-source SDO offerings, and are facilitated in PlasmaSDO™ by a custom UML profile and various associated SDO API extensions.</description>  
  <licenses>
      <license>
          <name>Plasma License</name>
          <url>https://github.com/terrameta/plasma/LICENSE</url>
          <distribution>repo</distribution>
      </license>
  </licenses>
  <scm>
      <url>https://github.com/terrameta/plasma</url>
      <connection></connection>
  </scm>  
  <developers>
      <developer>
          <id>scinnamond</id>
          <name>Scott Cinnamond</name>
          <email>scinnamond@gmail.com</email>
      </developer>
  </developers>
  <properties>
      <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>
  
  <repositories>
      <repository>
          <id>lib</id>
          <name>lib</name>
          <releases>
                  <enabled>true</enabled>
                  <checksumPolicy>ignore</checksumPolicy>
          </releases>
          <snapshots>
                  <enabled>false</enabled>
          </snapshots>
          <url>file://${project.basedir}/lib</url>
      </repository>
	  <repository>
		  <id>maven2-repository.dev.java.net</id>
		  <name>Java.net Maven 2 Repository</name>
		  <url>http://download.java.net/maven/2</url>
	  </repository>
  </repositories>
  <pluginRepositories>                                  
		<pluginRepository>                                
			<id>maven2-repository.dev.java.net</id>       
			<name>Java.net Maven 2 Repository</name>      
			<url>http://download.java.net/maven/2</url>   
		</pluginRepository>                               
  </pluginRepositories>                                 
  
  <dependencies>     
    
    <!--
        Dependencies for Plasma provisioning 
    -->  
	<dependency>
		<groupId>junit</groupId>
		<artifactId>junit</artifactId>
		<version>4.13.1</version>
		<scope>test</scope>
	</dependency>

	<!--  
	<dependency>
		<groupId>javax.jdo</groupId>
		<artifactId>jdo2-api</artifactId>
		<version>2.1.1</version>
	</dependency>
	<dependency>
		<groupId>org.apache.openjpa</groupId>
		<artifactId>openjpa</artifactId>
		<version>2.2.0</version>
	</dependency>
	<dependency>
		<groupId>commons-dbcp</groupId>
		<artifactId>commons-dbcp</artifactId>
		<version>1.4</version>
	</dependency>
    <dependency>                                 
        <groupId>com.oracle</groupId>          
        <artifactId>ojdbc6</artifactId>    
        <version>11.2.1.4</version>                   
    </dependency> 
    --> 
    <!--
    Note: for Oracle JDBC driver use e.g. : 
    mvn install:install-file -DgroupId=com.oracle -DartifactId=ojdbc5 -Dversion=11.2.1.4 -Dpackaging=jar -Dfile=E:\download\jdbc\ojdbc5.jar -DgeneratePom=true
    mvn install:install-file -DgroupId=com.oracle -DartifactId=ojdbc6 -Dversion=11.2.1.4 -Dpackaging=jar -Dfile=E:\download\jdbc\ojdbc6.jar -DgeneratePom=true 
    -->
    
    <!-- plasma sub-projects -->
    <dependency>
      <groupId>org.terrameta</groupId>
      <artifactId>plasma-common</artifactId>
      <version>1.3.4</version>
    </dependency>
    <dependency>
      <groupId>org.terrameta</groupId>
      <artifactId>plasma-sdo</artifactId>
      <version>1.3.4</version>
    </dependency>
    <dependency>
      <groupId>org.terrameta</groupId>
      <artifactId>plasma-sdo-jdbc</artifactId>
      <version>1.3.4</version>
    </dependency>
    <dependency>
      <groupId>org.terrameta</groupId>
      <artifactId>plasma-maven-plugin</artifactId>
      <version>1.3.4</version>
    </dependency>
  </dependencies>
	<build>
		<finalName>plasma-examples</finalName>
		<plugins>
      		<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.3</version>
				<!-- <configuration> <webXml>target/web.xml</webXml> </configuration> -->
				<configuration>
					<excludes>
						<exclude>**/*.xml</exclude>
						<exclude>**/*.mdxml</exclude>
						<exclude>**/*.properties</exclude>
						<exclude>com/*</exclude>
						<exclude>**/test/*</exclude>
					</excludes>
				</configuration>
			</plugin>
	        <plugin>
	            <groupId>org.terrameta</groupId>
	            <artifactId>plasma-maven-plugin</artifactId>
	            <version>1.3.4</version>
				<executions>
				           
					<execution>
					    <id>sdo-create</id>
					    <phase>generate-sources</phase>
                        <configuration>
                            <action>create</action>
                            <dialect>java</dialect>
                            <systemProperties>
                                <property><name>log4j.configuration</name><value>log4j.properties</value></property>
                                <property><name>fuml.configuration</name><value>fuml-config.xml</value></property> 
							    <property><name>plasma.configuration</name><value>plasma-config.xml</value></property>
                            </systemProperties>
                            <additionalClasspathElements>
                                <param>${basedir}/src/main/resources</param>
                                <param>${basedir}/src/main/resources/xml</param>
                                <param>${basedir}/src/main/resources/uml</param>
                            </additionalClasspathElements>
					        <outputDirectory>${basedir}/target/generated-sources/java</outputDirectory>
                            
                        </configuration>
						<goals>
							<goal>sdo</goal>
						</goals>
					</execution>
					<execution>
					    <id>dsl-create</id>
					    <phase>generate-sources</phase>
                        <configuration>
                            <action>create</action>
                            <dialect>java</dialect>
                            <systemProperties>
                                <property><name>log4j.configuration</name><value>log4j.properties</value></property>
                                <property><name>fuml.configuration</name><value>fuml-config.xml</value></property> 
							    <property><name>plasma.configuration</name><value>plasma-config.xml</value></property>
                            </systemProperties>
                            <additionalClasspathElements>
                                <param>${basedir}/src/main/resources</param>
                                <param>${basedir}/src/main/resources/xml</param>
                                <param>${basedir}/src/main/resources/uml</param>
                            </additionalClasspathElements>
					        <outputDirectory>${basedir}/target/generated-sources/java</outputDirectory>
                            
                        </configuration>
						<goals>
							<goal>dsl</goal>
						</goals>
					</execution>
					  
					<execution>
					    <id>query-compile-taxonomy-xsd</id>
					    <phase>generate-sources</phase>
                        <configuration>
                            <action>compile</action>
                            <sourceFile>${basedir}/src/test/resources/xml/taxonomy-export-query.xml</sourceFile>
                            <destFile>${basedir}/target/generated-sources/xsd/taxonomy-export-query.xsd</destFile>
                            <destFileType>xsd</destFileType>
                            <destNamespaceURI>http://plasma.org/test/sdo/export/taxonomy</destNamespaceURI>
                            <destNamespacePrefix>tx</destNamespacePrefix>
                            <systemProperties>
                                <property><name>log4j.configuration</name><value>log4j.properties</value></property>
                                <property><name>fuml.configuration</name><value>fuml-config.xml</value></property> 
							    <property><name>plasma.configuration</name><value>plasma-config.xml</value></property>
                            </systemProperties>
                            <additionalClasspathElements>
                                <param>${basedir}/src/main/resources</param>
                                <param>${basedir}/src/main/resources/xml</param>
                                <param>${basedir}/src/main/resources/uml</param>
                            </additionalClasspathElements>
                        </configuration>
						<goals>
							<goal>query</goal>
						</goals>
					</execution>
					 
                         
					<execution>
					    <id>query-compile-taxonomy-xmi</id>
					    <phase>generate-sources</phase>
                        <configuration>
                            <action>compile</action>
                            <sourceFile>${basedir}/src/test/resources/xml/taxonomy-export-query.xml</sourceFile>
                            <destFile>${basedir}/target/generated-sources/xmi/taxonomy-export-query.xmi</destFile>
                            <destFileType>xmi</destFileType>
                            <destNamespaceURI>http://plasma.org/test/sdo/export/taxonomy</destNamespaceURI>
                            <destNamespacePrefix>tx</destNamespacePrefix>
                            <systemProperties>
                                <property><name>log4j.configuration</name><value>log4j.properties</value></property>
                                <property><name>fuml.configuration</name><value>fuml-config.xml</value></property> 
							    <property><name>plasma.configuration</name><value>plasma-config.xml</value></property>
                            </systemProperties>
                            <additionalClasspathElements>
                                <param>${basedir}/src/main/resources</param>
                                <param>${basedir}/src/main/resources/xml</param>
                                <param>${basedir}/src/main/resources/uml</param>
                            </additionalClasspathElements>
                        </configuration>
						<goals>
							<goal>query</goal>
						</goals>
					</execution>
					<execution>
					    <id>query-compile-profile-xsd</id>
					    <phase>generate-sources</phase>
                        <configuration>
                            <action>compile</action>
                            <sourceFile>${basedir}/src/test/resources/xml/profile-export-query.xml</sourceFile>
                            <destFile>${basedir}/target/generated-sources/xsd/profile-export-query.xsd</destFile>
                            <destFileType>xsd</destFileType>
                            <destNamespaceURI>http://plasma.org/test/sdo/export/profile</destNamespaceURI>
                            <destNamespacePrefix>tx</destNamespacePrefix>
                            <systemProperties>
                                <property><name>log4j.configuration</name><value>log4j.properties</value></property>
                                <property><name>fuml.configuration</name><value>fuml-config.xml</value></property> 
							    <property><name>plasma.configuration</name><value>plasma-config.xml</value></property>
                            </systemProperties>
                            <additionalClasspathElements>
                                <param>${basedir}/src/main/resources</param>
                                <param>${basedir}/src/main/resources/xml</param>
                                <param>${basedir}/src/main/resources/uml</param>
                            </additionalClasspathElements>
                        </configuration>
						<goals>
							<goal>query</goal>
						</goals>
					</execution>
					<execution>
					    <id>query-compile-profile-xmi</id>
					    <phase>generate-sources</phase>
                        <configuration>
                            <action>compile</action>
                            <sourceFile>${basedir}/src/test/resources/xml/profile-export-query.xml</sourceFile>
                            <destFile>${basedir}/target/generated-sources/xmi/profile-export-query.xmi</destFile>
                            <destFileType>xmi</destFileType>
                            <destNamespaceURI>http://plasma.org/test/sdo/export/profile</destNamespaceURI>
                            <destNamespacePrefix>tx</destNamespacePrefix>
                            <systemProperties>
                                <property><name>log4j.configuration</name><value>log4j.properties</value></property>
                                <property><name>fuml.configuration</name><value>fuml-config.xml</value></property> 
							    <property><name>plasma.configuration</name><value>plasma-config.xml</value></property>
                            </systemProperties>
                            <additionalClasspathElements>
                                <param>${basedir}/src/main/resources</param>
                                <param>${basedir}/src/main/resources/xml</param>
                                <param>${basedir}/src/main/resources/uml</param>
                            </additionalClasspathElements>
                        </configuration>
						<goals>
							<goal>query</goal>
						</goals>
					</execution>
                     
				</executions>
	        </plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>jaxb2-maven-plugin</artifactId>
				<executions>				      
					<execution>
					    <id>taxonomy-export-xsd-compile</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>xjc</goal>
						</goals>
				        <configuration>
					        <schemaDirectory>${basedir}/target/generated-sources/xsd</schemaDirectory>
					        <schemaFiles>taxonomy-export-query.xsd</schemaFiles>
				            <staleFile>${project.build.directory}/jaxb2/.xjcStaleFlag-taxonomy-export</staleFile>
				        </configuration>
					</execution>
					<execution>
					    <id>profile-export-xsd-compile</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>xjc</goal>
						</goals>
				        <configuration>
					        <schemaDirectory>${basedir}/target/generated-sources/xsd</schemaDirectory>
					        <schemaFiles>profile-export-query.xsd</schemaFiles>
				            <staleFile>${project.build.directory}/jaxb2/.xjcStaleFlag-profile-export</staleFile>
				        </configuration>
					</execution>
					 
				</executions>
				<configuration>
					<!-- HACK: where is 'generated-sources' defined ?? -->
					<outputDirectory>${basedir}/target/generated-sources/java</outputDirectory>
					<clearOutputDir>false</clearOutputDir>
					<extension>true</extension>
					<target>2.0</target>
					<encoding>Cp1252</encoding>
				</configuration>
			</plugin>
		    <plugin>
		        <groupId>org.codehaus.mojo</groupId>
		        <artifactId>build-helper-maven-plugin</artifactId>
		        <version>1.7</version>
		        <executions>
		          <execution>
		            <id>add-source</id>
		            <phase>generate-sources</phase>
		            <goals>
		              <goal>add-source</goal>
		            </goals>
		            <configuration>
		              <sources>
		                <source>${basedir}/target/generated-sources/java</source>
		              </sources>
		            </configuration>
		          </execution>
		        </executions>
		      </plugin>
      		  <plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.10</version>
				<configuration>
				    <useSystemClassLoader>true</useSystemClassLoader>
				    <useManifestOnlyJar>true</useManifestOnlyJar>
					<additionalClasspathElements>
						<additionalClasspathElement>${basedir}/src/main/resources</additionalClasspathElement>
						<additionalClasspathElement>${basedir}/src/main/resources/xml</additionalClasspathElement>
						<additionalClasspathElement>${basedir}/src/main/resources/uml</additionalClasspathElement>
                        <additionalClasspathElement>${basedir}/src/test/resources</additionalClasspathElement>
                        <additionalClasspathElement>${basedir}/src/test/resources/xml</additionalClasspathElement>
                        <additionalClasspathElement>${basedir}/src/test/resources/uml</additionalClasspathElement>
					</additionalClasspathElements>
					 
					<includes>
                        <include>**/XPathTest.java</include>
                    </includes>					 

					<forkMode>pertest</forkMode>					
					<!-- <forkMode>never</forkMode>-->
					  
					<argLine>-Dlog4j.configuration=log4j.properties
						-Dfuml.configuration=fuml-config.xml
						-Dplasma.configuration=plasma-config.xml
						-Dclasses.dir=${basedir}/target/classes
						-Dtarget.dir=${basedir}</argLine>
                      
                    <!-- debugging -->  
                        <!--  
                    <argLine>-Dlog4j.configuration=log4j.properties
                        -Dfuml.configuration=fuml-config.xml
                        -Dplasma.configuration=plasma-config.xml
                        -Dclasses.dir=${basedir}/target/classes
                        -Dtarget.dir=${basedir} -Xdebug -Xnoagent -Xrunjdwp:transport=dt_socket,address=8002,server=y,suspend=y</argLine>                      
                      -->       
				</configuration>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.terrameta</groupId>
										<artifactId>
											plasma-maven-plugin
										</artifactId>
										<versionRange>
											[1.3.4,)
										</versionRange>
										<goals>
											<goal>dsl</goal>
											<goal>sdo</goal>
											<goal>query</goal>
											<goal>rdb</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											jaxb2-maven-plugin
										</artifactId>
										<versionRange>
											[1.4,)
										</versionRange>
										<goals>
											<goal>xjc</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											build-helper-maven-plugin
										</artifactId>
										<versionRange>
											[1.7,)
										</versionRange>
										<goals>
											<goal>add-source</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
  

  
</project>